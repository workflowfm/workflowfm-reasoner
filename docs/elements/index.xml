<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elements on WorkflowFM Reasoner</title><link>http://docs.workflowfm.com/workflowfm-reasoner/docs/elements/</link><description>Recent content in Elements on WorkflowFM Reasoner</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 08 Jun 2021 00:15:37 +0100</lastBuildDate><atom:link href="http://docs.workflowfm.com/workflowfm-reasoner/docs/elements/index.xml" rel="self" type="application/rss+xml"/><item><title>Resources</title><link>http://docs.workflowfm.com/workflowfm-reasoner/docs/elements/resources/</link><pubDate>Tue, 08 Jun 2021 00:15:38 +0100</pubDate><guid>http://docs.workflowfm.com/workflowfm-reasoner/docs/elements/resources/</guid><description>Processes are specified based on their input and output resources. Each resource is specified by its type and a π-calculus channel that receives or sends it.
Resource types Resource types are specified by a proposition in linear logic. In HOL Light these are propositions of type `:LinProp`.
Resource types can be composed using the following logical connectives:
Connective HOL Light Syntax Interpretation A ⊗ B A ** B Two resources A and B in parallel.</description></item><item><title>Actions</title><link>http://docs.workflowfm.com/workflowfm-reasoner/docs/elements/actions/</link><pubDate>Tue, 08 Jun 2021 00:15:39 +0100</pubDate><guid>http://docs.workflowfm.com/workflowfm-reasoner/docs/elements/actions/</guid><description>Before we introduce process specifications, we need to discuss how composition is broken down into binary actions and how state is managed for each action.
Actionstate Each composition action corresponds to a reasoning tactic implemented in HOL Light. These tactics require an extended proof state to function appropriately. This is extension is captured iusing the Actionstate structure.
The user is not required to manipulate the actionstate themselves, unless they perform low level proofs.</description></item></channel></rss>